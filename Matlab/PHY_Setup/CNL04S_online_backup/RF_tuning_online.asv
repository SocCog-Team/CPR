function out = RF_tuning_online(d,ff,in)

if nargin < 3
    in = cell(1,32);
end

%% Process

idx.tStart                  = d.event == 'TRIAL_start';
idx.tEnd                    = d.event == 'TRIAL_end';
idx.outcome                 = d.event == 'TRIAL_outcome';
idx.type                    = d.event == 'TRIAL_type';
idx.spikes                  = d.event == 'IO_spikes';

trl.start                   = d.time(idx.tStart);
trl.end                     = d.time(idx.tEnd);

win_offset                  = [50e3 250e3];

for iTrl = 1:length(trl.start)
    % Trial index
    trlIdx                  = [];
    trlIdx                  = d.time >= trl.start(iTrl) & d.time <= trl.end(iTrl);
    
    % Trial outcome
    outcome              	= getTrialData(d.value, trlIdx, idx.outcome);
    ttype                   = getTrialData(d.value, trlIdx, idx.type);
    rdp_time                = getTrialData(d.time, trlIdx, idx.type);
    
    for iChan = 1:32
        cnt                         = 0;

        % Stimulus position loop
        for iStim = 1:length(ttype)
            
            % Stimulus index - offset by certain lag
            sIdx                = [];
            sIdx            	= d.time >= rdp_time(iStim)+win_offset(1) & d.time <= rdp_time(iStim)+win_offset(2);
            dur                 = (rdp_time(iStim)+win_offset(2) - rdp_time(iStim)+win_offset(1)) / 1e6;
            
            % Spike count
            spike_time        	= getTrialData(d.time, sIdx, idx.spikes);
            spike_id          	= getTrialData(d.value, sIdx, idx.spikes);
            spike_id            = floor(spike_id); % channel-wise for now
            
            cnt                 = cnt+1;
            nSpikes(cnt)     	= sum(spike_id == iChan) / dur;
            dir(cnt)          	= str2num(ttype{iStim}(4:end));
        end
        
        out{iChan}              = cat(1,in{iChan},[nSpikes' dir']);
    end
end

%% PLOT

% figure(ff);

close all
f                               = figure('units','normalized','position',[0 0 1 1]);
dirs                            = [0:30:330];

for iChan = 1:32
    
    if sum(out{iChan}(:,1)) == 0
        continue
    end
    
    sum_spks = [];
    for iDir = 1:length(dirs)
        dir_dat                 = out{iChan}(:,2);
        sum_spks(iDir)          = mean(out{iChan}(dir_dat == dirs(iDir),1));
    end
    
    ax                          = subplot(4,8,iChan);
    pl                          = polarplot(deg2rad(dirs),sum_spks);
    pl.LineWidth                = 3;
    pl.Color                    = [0 0 0];   

    %     ax.Title.String             = ['Ch' num2str(iChan)];
end
end
